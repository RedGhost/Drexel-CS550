# Group 3
# assignment 4
# Mateusz Stankiewicz - Assignment 4 group leader
# Zachary Long
# Timothy Hanna
# Mark Albrecht
#

### Common File(s) ###
  README                    - The file you are currently reading.
  makefile                  - Makefile with view/build/clean commands
  java-cup-11a.jar          - .jar libraries for cup (included since they're not installed on tux)
  java-cup-11a-runtime.jar  - .jar libraries for cup (included since they're not installed on tux)
  ram                       - ram executable

### Part 1 ###
- view cmd: 'make view'
- build:    'make compile'
- details:
  The compile method requires a file or instructions to be given. When that happens it will generate
  a non-linked file (trans.out) a fully linked an runnable file (link.out),and an initial memory file (initialmemory.out).
  These files can be run using the RAL interpreter to produce the desired effect.
  Updated for Assignment 4 includes proc routines.
- Viewing files:
  Once make compile is run you can view the various files that were produced using this command:
  make view-trans   - displays the pre-linked file
  make view-link    - displays the linked file
- Running files using the RAL interpreter:
  make run          - runs the unoptimized linked file using the initial memory file
- Source File(s):
  interpreterext.cup  - cup grammar file
  interpreterext.flex - jflex scanner file
  Program.java        - Code file containing class definitions
  SymbolTable.java    - Maintains the symbols used in the program
  Linker.java         - Links the symbols to RAL instructions
  FunctionTable.java  - Contains Function and FunctionTable classes
  Instruction.java    - Class representing a RAL instruction
  PseudoInstruction.java - Class storing pseudo RAL instructions that get linked to real instructions.

### Testing ###
Testing was done by running against the sample input files.
